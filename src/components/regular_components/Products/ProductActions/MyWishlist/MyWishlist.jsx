import React, { useEffect } from "react";
import classes from "./MyWishlist.module.css";
import { useTypedSelector } from "../../../../../store/hooks/useTypedSelector";
import { useActions } from "../../../../../store/hooks/useActions";
import active_wishlist from "../../../../../assets/icons/actions/wishlist-icon-active.svg";
import wishlist_icons from "../../../../../assets/icons/actions/wishlist-icon-default.svg";
import { Link } from "react-router-dom";

const MyWishlist = ({
  product = { id: 0 },
  extended = false,
  headerIcon = false,
}) => {
  const { wishlistAddItem, wishlistRemoveItem } = useActions();
  const { wishlist } = useTypedSelector((state) => state);
  useEffect(() => {
    localStorage.setItem("wishlist", JSON.stringify(wishlist));
  }, [wishlist]);
  const isExistsInWishlist = wishlist.some(
    (element) => element.id === product.id
  );

  return (
    <>
      {headerIcon ? (
        <Link to="/wishlist" className={classes.wishlistBlockPosition}>
          {/* <img
            src={wishlist_icons}
            alt="Избранное"
            className={classes.actionButton}
          /> */}
          <svg
            width="24"
            height="20"
            viewBox="0 0 24 20"
            xmlns="http://www.w3.org/2000/svg"
            alt="Избранное"
            className={classes.actionButton}
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M11.9998 2.22222C11.6225 1.7876 11.1826 1.4081 10.6974 1.09156C9.62497 0.392041 8.33081 0 6.99978 0C3.57756 0 0.888672 2.6376 0.888672 5.99455C0.888672 7.18734 1.17283 8.32002 1.65959 9.3976C3.16934 12.7429 6.62841 15.5659 9.60589 17.9959C10.4631 18.6955 11.2804 19.3625 11.9998 20C12.7192 19.3625 13.5365 18.6955 14.3937 17.9959C17.3711 15.5659 20.8301 12.743 22.3399 9.39778C22.8267 8.32014 23.1109 7.1874 23.1109 5.99455C23.1109 2.6376 20.422 0 16.9998 0C15.6688 0 14.3746 0.392041 13.3022 1.09156C12.8169 1.4081 12.3771 1.7876 11.9998 2.22222ZM11.9998 17.0777C12.3584 16.7805 12.725 16.4807 13.0911 16.1814C13.4011 15.9279 13.7108 15.6748 14.0149 15.4237C15.2321 14.4188 16.4235 13.3978 17.4786 12.3278C18.7842 11.0037 19.7546 9.72925 20.3196 8.47132C20.6923 7.64078 20.8887 6.81814 20.8887 5.99455C20.8887 3.90505 19.2352 2.22222 16.9998 2.22222C15.6793 2.22222 14.447 2.79303 13.6779 3.67902L11.9998 5.61204L10.3217 3.67902C9.55254 2.79303 8.32026 2.22222 6.99978 2.22222C4.76432 2.22222 3.11089 3.90505 3.11089 5.99455C3.11089 6.81814 3.30727 7.64078 3.67993 8.47132C4.245 9.72925 5.21537 11.0037 6.521 12.3278C7.57605 13.3978 8.7675 14.4188 9.9847 15.4237C10.2888 15.6748 10.5984 15.9279 10.9085 16.1814C11.2745 16.4807 11.6411 16.7805 11.9998 17.0777Z"
              fill="#003767"
            />
          </svg>

          <span className={classes.countSpan}>{wishlist.length}</span>
        </Link>
      ) : (
        <div
          className={classes.wishlistBlock}
          onClick={() => {
            isExistsInWishlist
              ? wishlistRemoveItem(product)
              : wishlistAddItem(product);
          }}
        >
          {/* <img
            src={isExistsInWishlist ? active_wishlist : wishlist_icons}
            alt="Избранное"
          /> */}
          <div className={classes.circleIcon}>
            <svg
              width="20"
              height="20"
              viewBox="0 0 24 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              {!isExistsInWishlist ? (
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M11.9998 2.22222C11.6225 1.7876 11.1826 1.4081 10.6974 1.09156C9.62497 0.392041 8.33081 0 6.99978 0C3.57756 0 0.888672 2.6376 0.888672 5.99455C0.888672 7.18734 1.17283 8.32002 1.65959 9.3976C3.16934 12.7429 6.62841 15.5659 9.60589 17.9959C10.4631 18.6955 11.2804 19.3625 11.9998 20C12.7192 19.3625 13.5365 18.6955 14.3937 17.9959C17.3711 15.5659 20.8301 12.743 22.3399 9.39778C22.8267 8.32014 23.1109 7.1874 23.1109 5.99455C23.1109 2.6376 20.422 0 16.9998 0C15.6688 0 14.3746 0.392041 13.3022 1.09156C12.8169 1.4081 12.3771 1.7876 11.9998 2.22222ZM11.9998 17.0777C12.3584 16.7805 12.725 16.4807 13.0911 16.1814C13.4011 15.9279 13.7108 15.6748 14.0149 15.4237C15.2321 14.4188 16.4235 13.3978 17.4786 12.3278C18.7842 11.0037 19.7546 9.72925 20.3196 8.47132C20.6923 7.64078 20.8887 6.81814 20.8887 5.99455C20.8887 3.90505 19.2352 2.22222 16.9998 2.22222C15.6793 2.22222 14.447 2.79303 13.6779 3.67902L11.9998 5.61204L10.3217 3.67902C9.55254 2.79303 8.32026 2.22222 6.99978 2.22222C4.76432 2.22222 3.11089 3.90505 3.11089 5.99455C3.11089 6.81814 3.30727 7.64078 3.67993 8.47132C4.245 9.72925 5.21537 11.0037 6.521 12.3278C7.57605 13.3978 8.7675 14.4188 9.9847 15.4237C10.2888 15.6748 10.5984 15.9279 10.9085 16.1814C11.2745 16.4807 11.6411 16.7805 11.9998 17.0777Z"
                  fill="#003767"
                />
              ) : (
                <path
                  d="M9.80868 1.09156C10.294 1.4081 10.7338 1.7876 11.1111 2.22222C11.4884 1.7876 11.9283 1.4081 12.4135 1.09156C13.4859 0.392041 14.7801 0 16.1111 0C19.5333 0 22.2222 2.6376 22.2222 5.99455C22.2222 7.1874 21.938 8.32014 21.4512 9.39778C19.9414 12.743 16.4824 15.5659 13.505 17.9959L13.3447 18.1267C12.546 18.7787 11.7855 19.4023 11.1111 20C10.3917 19.3625 9.57445 18.6955 8.71725 17.9959L8.71722 17.9959C5.73973 15.5659 2.28067 12.7429 0.770921 9.3976C0.284158 8.32002 0 7.18734 0 5.99455C0 2.6376 2.68889 0 6.11111 0C7.44214 0 8.7363 0.392041 9.80868 1.09156Z"
                  fill="#FF4822"
                />
              )}
            </svg>
          </div>
          {extended ? "Избранное" : ""}
        </div>
      )}
    </>
  );
};

export default MyWishlist;
